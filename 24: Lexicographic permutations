using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EulerProjectNatty
{
    class Program
    {
        public static double FactorialSmallInt(int num)
        {
            int factorial = 1;
            for (int i = 1; i <= num; i++)
            {
                factorial *= i;
            }
            return factorial;
        }

        static void Main(string[] args)
        {
            Console.WriteLine("A permutation is an ordered arrangement of objects.\nFor example, 3124 is one possible permutation of the digits 1, 2, 3 and 4.\nIf all of the permutations are listed numerically or alphabetically, we call it lexicographic order.\nThe lexicographic permutations of 0, 1 and 2 are:\n              012   021   102   120   201   210\n\nWhat is the millionth lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8 and 9 ?\n\n");
            char[] result = new char[10];
            double permutation = 1000000;
            string s = "0123456789";
            for (int i = s.Length - 1; i >= 0; i--)
            {
                double index = Math.Ceiling(permutation / FactorialSmallInt(s.Length - 1)) - 1;
                result[i] = s[(int)index];
                s = s.Remove((int)index, 1);
                permutation -= FactorialSmallInt(i) * index;
            }
            Array.Reverse(result);
            Console.WriteLine(new string(result));
        }
    }
}



A permutation is an ordered arrangement of objects.
For example, 3124 is one possible permutation of the digits 1, 2, 3 and 4.
If all of the permutations are listed numerically or alphabetically, we call it lexicographic order.
The lexicographic permutations of 0, 1 and 2 are:
              012   021   102   120   201   210

What is the millionth lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8 and 9 ?


2783915460
Press any key to continue . . .
